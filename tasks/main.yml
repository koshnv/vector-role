---
# Скачивание RPM-пакета Vector для RedHat-based систем
- name: Get Vector RPM distrib
  ansible.builtin.get_url:
    url: "https://packages.timber.io/vector/{{ vector_rpm_version }}/vector-{{ vector_rpm_version }}-1.{{ ansible_architecture }}.rpm"
    dest: "/tmp/{{ vector_rpm_package }}"
    mode: '0644'
  when: ansible_os_family == "RedHat"

# Копирование deb-пакета Vector для Debian-based систем
- name: Copy Vector deb package
  ansible.builtin.copy:
    src: "files/{{ vector_deb_package }}"
    dest: "/tmp/{{ vector_deb_package }}"
    mode: '0644'
  when: ansible_os_family == "Debian"

# Установка RPM-пакета Vector для RedHat-based систем
- name: Install Vector RPM package
  #become: true
  ansible.builtin.yum:
    name: "/tmp/{{ vector_rpm_package }}"
    state: present
  when: ansible_os_family == "RedHat"
  notify: Restart Vector service

# Установка deb-пакета Vector для Debian-based систем
- name: Install Vector deb package
#  become: true
  ansible.builtin.apt:
    deb: "/tmp/{{ vector_deb_package }}"
    state: present
  when: ansible_os_family == "Debian"
  notify: Restart Vector service

# Создание каталога для local_logs
- name: Create directory for Vector local_logs
  #become: true
  ansible.builtin.file:
    path: /var/lib/vector/local_logs
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: '0644'

# Развертывание конфигурационного файла Vector
- name: Deploy Vector config
  #become: true
  ansible.builtin.template:
    src: vector.j2
    dest: "{{ vector_config_path }}"
    mode: '0644'
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    validate: vector validate --no-environment --config-toml %s
  notify: Restart Vector service
  #when: use_systemd

# Создание systemd-юнита для Vector
- name: Create Vector systemd unit
  #become: true
  ansible.builtin.template:
    src: vector.service.j2
    dest: /etc/systemd/system/vector.service
    mode: '0644'
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
  notify: Reload systemd and restart Vector
  #when: use_systemd

#- name: Ensure Vector is running (non-systemd)
#  ansible.builtin.command:
#    cmd: vector --config {{ vector_config_path }} --watch-config
#    chdir: /tmp
#    creates: /tmp/vector.pid
#  async: 3600
#  poll: 0
#  when: ansible_os_family == "Debian" and not use_systemd
  
  
# Убедиться, что служба Vector запущена
- name: Ensure Vector service is started
  #become: true
  ansible.builtin.systemd:
    name: vector
    state: started
    enabled: true
    daemon_reload: true
  #when: use_systemd